/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_Common_WRAP_H_
#define SWIG_Common_WRAP_H_

class SwigDirector_SubscriberInstance : public sttp::transport::SubscriberInstance, public Swig::Director {

public:
    SwigDirector_SubscriberInstance();
    virtual void SetupSubscriberConnector(sttp::transport::SubscriberConnector &connector);
    virtual sttp::transport::SubscriptionInfo CreateSubscriptionInfo();
    virtual void StatusMessage(std::string const &message);
    virtual void ErrorMessage(std::string const &message);
    virtual void DataStartTime(sttp::datetime_t startTime);
    virtual void ReceivedMetadata(std::vector< uint8_t > const &payload);
    virtual void ParsedMetadata();
    virtual void ReceivedNewMeasurements(std::vector< sttp::transport::MeasurementPtr > const &measurements);
    virtual void ReceivedNewMeasurements(sttp::transport::SimpleMeasurement const *measurements, int32_t length);
    virtual void ConfigurationChanged();
    virtual void HistoricalReadComplete();
    virtual void ConnectionEstablished();
    virtual void ConnectionTerminated();
    virtual ~SwigDirector_SubscriberInstance();

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback8_t)(void *, int);
    typedef void (SWIGSTDCALL* SWIG_Callback9_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback10_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback12_t)();
    void swig_connect_director(SWIG_Callback0_t callbackSetupSubscriberConnector, SWIG_Callback1_t callbackCreateSubscriptionInfo, SWIG_Callback2_t callbackStatusMessage, SWIG_Callback3_t callbackErrorMessage, SWIG_Callback4_t callbackDataStartTime, SWIG_Callback5_t callbackReceivedMetadata, SWIG_Callback6_t callbackParsedMetadata, SWIG_Callback7_t callbackReceivedNewMeasurements__SWIG_0, SWIG_Callback8_t callbackReceivedNewMeasurements__SWIG_1, SWIG_Callback9_t callbackConfigurationChanged, SWIG_Callback10_t callbackHistoricalReadComplete, SWIG_Callback11_t callbackConnectionEstablished, SWIG_Callback12_t callbackConnectionTerminated);

private:
    SWIG_Callback0_t swig_callbackSetupSubscriberConnector;
    SWIG_Callback1_t swig_callbackCreateSubscriptionInfo;
    SWIG_Callback2_t swig_callbackStatusMessage;
    SWIG_Callback3_t swig_callbackErrorMessage;
    SWIG_Callback4_t swig_callbackDataStartTime;
    SWIG_Callback5_t swig_callbackReceivedMetadata;
    SWIG_Callback6_t swig_callbackParsedMetadata;
    SWIG_Callback7_t swig_callbackReceivedNewMeasurements__SWIG_0;
    SWIG_Callback8_t swig_callbackReceivedNewMeasurements__SWIG_1;
    SWIG_Callback9_t swig_callbackConfigurationChanged;
    SWIG_Callback10_t swig_callbackHistoricalReadComplete;
    SWIG_Callback11_t swig_callbackConnectionEstablished;
    SWIG_Callback12_t swig_callbackConnectionTerminated;
    void swig_init_callbacks();
};

class SwigDirector_PublisherInstance : public sttp::transport::PublisherInstance, public Swig::Director {

public:
    SwigDirector_PublisherInstance();
    virtual void StatusMessage(std::string const &message);
    virtual void ErrorMessage(std::string const &message);
    virtual void ClientConnected(sttp::transport::SubscriberConnectionPtr const &connection);
    virtual void ClientDisconnected(sttp::transport::SubscriberConnectionPtr const &connection);
    virtual void ProcessingIntervalChangeRequested(sttp::transport::SubscriberConnectionPtr const &connection);
    virtual void TemporalSubscriptionRequested(sttp::transport::SubscriberConnectionPtr const &connection);
    virtual void TemporalSubscriptionCanceled(sttp::transport::SubscriberConnectionPtr const &connection);
    virtual void HandleUserCommand(sttp::transport::SubscriberConnectionPtr const &connection, uint32_t command, std::vector< uint8_t > const &buffer);
    virtual ~SwigDirector_PublisherInstance();
    virtual bool Start(uint16_t port, bool ipV6 = false);
    virtual bool Start(std::string const &networkInterfaceIP, uint16_t port);
    virtual void Stop();

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)(void *, unsigned int, void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback8_t)(unsigned short, unsigned int);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback9_t)(unsigned short);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback10_t)(char *, unsigned short);
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)();
    void swig_connect_director(SWIG_Callback0_t callbackStatusMessage, SWIG_Callback1_t callbackErrorMessage, SWIG_Callback2_t callbackClientConnected, SWIG_Callback3_t callbackClientDisconnected, SWIG_Callback4_t callbackProcessingIntervalChangeRequested, SWIG_Callback5_t callbackTemporalSubscriptionRequested, SWIG_Callback6_t callbackTemporalSubscriptionCanceled, SWIG_Callback7_t callbackHandleUserCommand, SWIG_Callback8_t callbackStart__SWIG_0, SWIG_Callback9_t callbackStart__SWIG_1, SWIG_Callback10_t callbackStart__SWIG_2, SWIG_Callback11_t callbackStop);

private:
    SWIG_Callback0_t swig_callbackStatusMessage;
    SWIG_Callback1_t swig_callbackErrorMessage;
    SWIG_Callback2_t swig_callbackClientConnected;
    SWIG_Callback3_t swig_callbackClientDisconnected;
    SWIG_Callback4_t swig_callbackProcessingIntervalChangeRequested;
    SWIG_Callback5_t swig_callbackTemporalSubscriptionRequested;
    SWIG_Callback6_t swig_callbackTemporalSubscriptionCanceled;
    SWIG_Callback7_t swig_callbackHandleUserCommand;
    SWIG_Callback8_t swig_callbackStart__SWIG_0;
    SWIG_Callback9_t swig_callbackStart__SWIG_1;
    SWIG_Callback10_t swig_callbackStart__SWIG_2;
    SWIG_Callback11_t swig_callbackStop;
    void swig_init_callbacks();
};


#endif
